slug: datamesh-workshop-2021
id: zbgwyhtzekkv
type: track
title: Data Mesh workshop 2021
teaser: Data Mesh data sharing explained with examples
description: |-
  Sharing data from your Data Mesh might be challenging.

  **This track demonstrates:**
    - How our environment is setup
    - The concept of Delta Sharing
    - A quick word on the Delta format
    - The Delta Sharing protocol
    - Read shared data with spark
    - Read shared data with python/pandas
icon: https://cdn.instruqt.com/assets/templates/docker.png
tags: []
owner: godatadriven
developers:
- krisgeusebroek@godatadriven.com
private: false
published: true
challenges:
- slug: 01-the-environment
  id: 34yftjjznay4
  type: challenge
  title: Check all running services
  teaser: Verify our simple environment for delta sharing
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      In this first challenge, you'll verify our environment to work with. Please wait while we
      boot a virtual machine for you.
  assignment: |
    Use this command to check all services are running smoothly:

    ```
    docker ps
    ```

    We expect 6 docker containers to show here.
    In the next challenge we will investigate those further.

    To complete the
    challenge, press **Check**.
  tabs:
  - title: Terminal
    type: terminal
    hostname: instruqt-datamesh
  difficulty: basic
  timelimit: 600
- slug: 02-the-environment-in-depth
  id: m920ffd436ie
  type: challenge
  title: Explain all running services
  teaser: Explanation of our simple environment
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      In this second challenge, we'll explain our environment more in-depth.
  assignment: |
    Next to the terminal tab you might notice the tab called `Jupyter`.
    We will use this a lot in the next challenges.

    Go to this `Jupyter` tab and fill in the requested token `datamesh`.

    Open the notebook called `02-the-environment-in-depth`

    To go to the next challenge, press **Check**.
  tabs:
  - title: Terminal
    type: terminal
    hostname: instruqt-datamesh
  - title: Jupyter
    type: service
    hostname: instruqt-datamesh
    port: 10000
  difficulty: basic
  timelimit: 600
- slug: 03-the-protocol-notebook
  id: jyzsbj06qbzx
  type: challenge
  title: The delta sharing protocol notebook
  teaser: Explore the delta sharing protocol in a jupyter notebook
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      We will explore the Delta sharing protocol from a jupyter notebook
  assignment: |2

    Open the notebook called `03-the-protocol-notebook`

    To finish the challenge, press **Check**.
  tabs:
  - title: Jupyter
    type: service
    hostname: instruqt-datamesh
    port: 10000
  difficulty: basic
  timelimit: 600
- slug: 04-the-protocol-terminal
  id: 3efccw3lfjvi
  type: challenge
  title: The delta sharing protocol with curl
  teaser: Explore the delta sharing protocol in a terminal
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      We will explore the Delta sharing protocol from a terminal
  assignment: |2

    Open the terminal tab

    Try this example curl request to explore the protocol
    ```
    curl -s -H 'Authorization: Bearer authTokenDeltaSharing432' localhost:38080/delta-sharing/shares | jq
    ```

    Other example paths:
    - shares/demo/schemas
    - shares/demo/schemas/world/tables
    - shares/demo/schemas/world/tables/cities/query (POST)

    To finish the challenge, press **Check**.
  tabs:
  - title: Terminal
    type: terminal
    hostname: instruqt-datamesh
  difficulty: basic
  timelimit: 600
- slug: 05-read-python-notebook
  id: ss51mcfdow96
  type: challenge
  title: Read delta sharing data with python in a notebook
  teaser: Read delta sharing data in a python notebook
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      We will read data with python from a jupyter notebook
  assignment: |2

    Open the notebook called `05-read-python-notebook`

    To finish the challenge, press **Check**.
  tabs:
  - title: Jupyter
    type: service
    hostname: instruqt-datamesh
    port: 10000
  difficulty: basic
  timelimit: 600
- slug: 06-read-python-terminal
  id: unpjet8xuluk
  type: challenge
  title: Read delta sharing data with python
  teaser: Read delta sharing data in python
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      We will read data with python
  assignment: |2

    Start a python interpreter from within the python docker container

    ```
    docker exec -ti instruqt-datamesh-vm_python_1 /bin/bash
    ```

    ```
    python
    ```

    ```
    import delta_sharing
    profile_file = "file:///opt/delta/conf/delta.profile"

    client = delta_sharing.SharingClient(profile_file)
    client.list_all_tables()

    table_url = profile_file + "#demo.world.cities"
    sharingDF = delta_sharing.load_as_pandas(table_url)
    sharingDF.head()
    ```

    To finish the challenge, press **Check**.
  tabs:
  - title: Terminal
    type: terminal
    hostname: instruqt-datamesh
  difficulty: basic
  timelimit: 600
- slug: 07-read-spark-notebook
  id: gqxxrqskkmly
  type: challenge
  title: Read delta sharing data with spark in a notebook
  teaser: Read delta sharing data in a spark notebook
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      We will read data with spark from a jupyter notebook
  assignment: |2

    Open the notebook called `07-read-spark-notebook`

    To finish the challenge, press **Check**.
  tabs:
  - title: Jupyter
    type: service
    hostname: instruqt-datamesh
    port: 10000
  difficulty: basic
  timelimit: 600
- slug: 08-read-spark-terminal
  id: dboatbk0wdnm
  type: challenge
  title: Read delta sharing data with spark
  teaser: Read delta sharing data in spark
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      We will read data with spark
  assignment: |2

    Start a spark shell from within the spark docker container

    ```
    docker exec -ti instruqt-datamesh-vm_sparkshell_1 /bin/bash
    ```

    ```
    spark-shell --packages io.delta:delta-core_2.12:1.0.0,io.delta:delta-sharing-spark_2.12:0.1.0
    ```

    ```
    val profile_file = "file:///opt/delta/conf/delta.profile"
    val table_url = profile_file + "#demo.world.cities"

    val sharedDF = spark.read.format("deltaSharing").load(table_url)
    sharedDF.show()
    ```

    To finish the challenge, press **Check**.
  tabs:
  - title: Terminal
    type: terminal
    hostname: instruqt-datamesh
  difficulty: basic
  timelimit: 600
- slug: 09-playtime
  id: 63jx2xhy9opd
  type: challenge
  title: Play around
  teaser: play around with this environment
  notes:
  - type: text
    contents: |
      # Learn about Delta Sharing
      Delta Sharing is the open protocol for sharing data from your Data Mesh!

      We will play around with this environment
  assignment: |2

    Play around with the two datasets in a notebook or a terminal.
    Or explore how everything comes together based on the code in the `Editor` tab.

    To finish the challenge, press **Check**.
  tabs:
  - title: Terminal
    type: terminal
    hostname: instruqt-datamesh
  - title: Jupyter
    type: service
    hostname: instruqt-datamesh
    port: 10000
  - title: Editor
    type: code
    hostname: instruqt-datamesh
    path: /opt/docker-compose/instruqt-datamesh-vm
  difficulty: basic
  timelimit: 1800
checksum: "15163184730059519583"
